use wasmjvm_common::WasmJVMError;

#[repr(u8)]
#[derive(Debug)]
pub enum OpCode {
    Nop=0x00,
    AconstNull=0x01,
    IconstM1=0x02,
    Iconst0=0x03,
    Iconst1=0x04,
    Iconst2=0x05,
    Iconst3=0x06,
    Iconst4=0x07,
    Iconst5=0x08,
    Lconst0=0x09,
    Lconst1=0x0a,
    Fconst0=0x0b,
    Fconst1=0x0c,
    Fconst2=0x0d,
    Dconst0=0x0e,
    Dconst1=0x0f,
    BiPush=0x10,
    SiPush=0x11,
    Ldc=0x12,
    LdcW=0x13,
    Ldc2W=0x14,
    Iload=0x15,
    Lload=0x16,
    Fload=0x17,
    Dload=0x18,
    Aload=0x19,
    Iload0=0x1a,
    Iload1=0x1b,
    Iload2=0x1c,
    Iload3=0x1d,
    Lload0=0x1e,
    Lload1=0x1f,
    Lload2=0x20,
    Lload3=0x21,
    Fload0=0x22,
    Fload1=0x23,
    Fload2=0x24,
    Fload3=0x25,
    Dload0=0x26,
    Dload1=0x27,
    Dload2=0x28,
    Dload3=0x29,
    Aload0=0x2a,
    Aload1=0x2b,
    Aload2=0x2c,
    Aload3=0x2d,
    IAload=0x2e,
    LAload=0x2f,
    FAload=0x30,
    DAload=0x31,
    AAload=0x32,
    BAload=0x33,
    CAload=0x34,
    SAload=0x35,
    Istore=0x36,
    Lstore=0x37,
    Fstore=0x38,
    Dstore=0x39,
    Astore=0x3a,
    Istore0=0x3b,
    Istore1=0x3c,
    Istore2=0x3d,
    Istore3=0x3e,
    Lstore0=0x3f,
    Lstore1=0x40,
    Lstore2=0x41,
    Lstore3=0x42,
    Fstore0=0x43,
    Fstore1=0x44,
    Fstore2=0x45,
    Fstore3=0x46,
    Dstore0=0x47,
    Dstore1=0x48,
    Dstore2=0x49,
    Dstore3=0x4a,
    Astore0=0x4b,
    Astore1=0x4c,
    Astore2=0x4d,
    Astore3=0x4e,
    IAstore=0x4f,
    LAstore=0x50,
    FAstore=0x51,
    DAstore=0x52,
    AAstore=0x53,
    BAstore=0x54,
    CAstore=0x55,
    SAstore=0x56,
    Pop=0x57,
    Pop2=0x58,
    Dup=0x59,
    DupX1=0x5a,
    DupX2=0x5b,
    Dup2=0x5c,
    Dup2X1=0x5d,
    Dup2X2=0x5e,
    Swap=0x5f,
    Iadd=0x60,
    Ladd=0x61,
    Fadd=0x62,
    Dadd=0x63,
    Isub=0x64,
    Lsub=0x65,
    Fsub=0x66,
    Dsub=0x67,
    Imul=0x68,
    Lmul=0x69,
    Fmul=0x6a,
    Dmul=0x6b,
    Idiv=0x6c,
    Ldiv=0x6d,
    Fdiv=0x6e,
    Ddiv=0x6f,
    Irem=0x70,
    Lrem=0x71,
    Frem=0x72,
    Drem=0x73,
    Ineg=0x74,
    Lneg=0x75,
    Fneg=0x76,
    Dneg=0x77,
    Ishl=0x78,
    Lshl=0x79,
    Ishr=0x7a,
    Lshr=0x7b,
    Iushr=0x7c,
    Lushr=0x7d,
    Iand=0x7e,
    Land=0x7f,
    Ior=0x80,
    Lor=0x81,
    Ixor=0x82,
    Lxor=0x83,
    Iinc=0x84,
    I2l=0x85,
    I2f=0x86,
    I2d=0x87,
    L2i=0x88,
    L2f=0x89,
    L2d=0x8a,
    F2i=0x8b,
    F2l=0x8c,
    F2d=0x8d,
    D2i=0x8e,
    D2l=0x8f,
    D2f=0x90,
    I2b=0x91,
    I2c=0x92,
    I2s=0x93,
    Lcmp=0x94,
    Fcmpl=0x95,
    Fcmpg=0x96,
    Dcmpl=0x97,
    Dcmpg=0x98,
    Ifeq=0x99,
    Ifne=0x9a,
    Iflt=0x9b,
    Ifge=0x9c,
    Ifgt=0x9d,
    Ifle=0x9e,
    IfIcmpeq=0x9f,
    IfIcmpne=0xa0,
    IfIcmplt=0xa1,
    IfIcmpge=0xa2,
    IfIcmpgt=0xa3,
    IfIcmple=0xa4,
    IfAcmpeq=0xa5,
    IfAcmpne=0xa6,
    Goto=0xa7,
    Jsr=0xa8,
    Ret=0xa9,
    Tableswitch=0xaa,
    Lookupswitch=0xab,
    Ireturn=0xac,
    Lreturn=0xad,
    Freturn=0xae,
    Dreturn=0xaf,
    Areturn=0xb0,
    Return=0xb1,
    GetStatic=0xb2,
    PutStatic=0xb3,
    GetField=0xb4,
    PutField=0xb5,
    InvokeVirtual=0xb6,
    InvokeSpecial=0xb7,
    InvokeStatic=0xb8,
    InvokeInterface=0xb9,
    InvokeDynamic=0xba,
    New=0xbb,
    NewArray=0xbc,
    ANewArray=0xbd,
    ArrayLength=0xbe,
    Athrow=0xbf,
    CheckCast=0xc0,
    Instanceof=0xc1,
    MonitorEnter=0xc2,
    MonitorExit=0xc3,
    Wide=0xc4,
    MultiANewArray=0xc5,
    IfNull=0xc6,
    IfNonNull=0xc7,
    GotoW=0xc8,
    JsrW=0xc9,
    Breakpoint=0xca,
    Impdep1=0xfe,
    Impdep2=0xff,
}

impl OpCode {
    pub fn from_u8(opcode: u8) -> Result<Self, WasmJVMError> {
        if opcode <= 201 {
            Ok(unsafe { std::mem::transmute(opcode) })
        } else {
            Err(WasmJVMError::TODO)
        }
    }
}
